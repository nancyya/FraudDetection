'''
Created on Feb 13, 2014

@author: nancy
'''
import os
import re #used for regular expressions
from urlparse import urlparse #used to extract the URL domain
from re import compile #used for regular expressions
from datetime import datetime as time
from safebrowsinglookup import SafebrowsinglookupClient

global domains; domains = dict({});
global malwareDomains; malwareDomains = [];


inputFilePath = 'C:/Users/nancy/OneDrive/Fraud/THD_Blacklist.txt'
targetFilePath = 'C:/Users/nancy/OneDrive/Fraud/malwareListSafeBrowsing.txt'
    
def readFile(filePath):
    
    print("Reading from file...")
    
    with open(filePath,"r") as f:
        next(f) # Skip the header
        for line in f:
            
            url = [str(s) for s in line.rstrip().split('\t')][0]
            url = getDomainFromRequestedSite(url);
            domains[url] = 1;
                 
    return

def retrieveSafeBrowseringResutls():
    
    print("Connecting to SafebrowsinglookupClient...")
    
    #key = 'ABQIAAAAMW5c1P9_7qTcpx8drxoM8xQXc-3IJoTDvJwbFxcncj5ENdNsVw'
    key = 'AIzaSyAWHi27ImtGlIc2APppC4lGlU1N01fiE1c'
    client = SafebrowsinglookupClient(key)
    
    if(client):
        print("Connected successfully to SafebrowsinglookupClient!")
        print("Running lookup ...")
        
        results = client.lookup(*domains.keys());
        
        for url in results:
            if (results[url] != 'ok'):
                print url + ',' + results[url]
            if (results[url] == "malware" or results[url] ==  "phishing" or results[url] ==  "malware,phishing"):
                malwareDomains.append(url)
    
        print("Number of Malware Domains : " + str(len(malwareDomains)) + " Out of: " + str(len(domains))) 
        

def getDomainFromRequestedSite(url): 

    if(url):
        if(compile('\[|\]').search(url) != None):   
            parsed = ''
            return parsed
        else: 
            parsed = urlparse(url)
            
            if (parsed.netloc == ''): # mostly- urls without http
                tmp = 'http://'+ str(url)
                tmpParsed = urlparse(tmp)
                parsed = tmpParsed   
                        
            return parsed.hostname
    else: return ''  

def writeToFile(filePath, text):
    
        os.path.exists(filePath) and os.remove(filePath)
        target = open(filePath, 'a')
        
        target.write(str(text)) 
        target.close()
        return None       
    
class main():
    print "STRAT -----> " + str(time.now())
    
    running_time = time.now()
    
    readFile(inputFilePath)
    
    retrieveSafeBrowseringResutls();
    
    writeToFile(targetFilePath,malwareDomains);
    
    running_time = time.now() - running_time
    
    print "END -----> " + str(time.now()) + " Total running time : %s " % str(running_time)
